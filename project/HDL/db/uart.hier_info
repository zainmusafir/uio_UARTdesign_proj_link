|uart
clk => UART_tx:transmitter.clk
clk => rdata[0]~reg0.CLK
clk => rdata[1]~reg0.CLK
clk => rdata[2]~reg0.CLK
clk => rdata[3]~reg0.CLK
clk => rdata[4]~reg0.CLK
clk => rdata[5]~reg0.CLK
clk => rdata[6]~reg0.CLK
clk => rdata[7]~reg0.CLK
clk => rdata[8]~reg0.CLK
clk => rdata[9]~reg0.CLK
clk => rdata[10]~reg0.CLK
clk => rdata[11]~reg0.CLK
clk => rdata[12]~reg0.CLK
clk => rdata[13]~reg0.CLK
clk => rdata[14]~reg0.CLK
clk => rdata[15]~reg0.CLK
clk => rdata[16]~reg0.CLK
clk => rdata[17]~reg0.CLK
clk => rdata[18]~reg0.CLK
clk => rdata[19]~reg0.CLK
clk => rdata[20]~reg0.CLK
clk => rdata[21]~reg0.CLK
clk => rdata[22]~reg0.CLK
clk => rdata[23]~reg0.CLK
clk => rdata[24]~reg0.CLK
clk => rdata[25]~reg0.CLK
clk => rdata[26]~reg0.CLK
clk => rdata[27]~reg0.CLK
clk => rdata[28]~reg0.CLK
clk => rdata[29]~reg0.CLK
clk => rdata[30]~reg0.CLK
clk => rdata[31]~reg0.CLK
clk => mm_tx_status[1].CLK
clk => mm_tx_status[2].CLK
clk => mm_tx_status[4].CLK
clk => mm_tx_status[5].CLK
clk => mm_rx_data[0].CLK
clk => mm_rx_data[1].CLK
clk => mm_rx_data[2].CLK
clk => mm_rx_data[3].CLK
clk => mm_rx_data[4].CLK
clk => mm_rx_data[5].CLK
clk => mm_rx_data[6].CLK
clk => mm_rx_data[7].CLK
clk => UART_rx:receiver.clk
arst_n => mm_tx_status[1].ACLR
arst_n => mm_tx_status[2].ACLR
arst_n => mm_tx_status[4].ACLR
arst_n => mm_tx_status[5].ACLR
arst_n => mm_rx_data[0].ACLR
arst_n => mm_rx_data[1].ACLR
arst_n => mm_rx_data[2].ACLR
arst_n => mm_rx_data[3].ACLR
arst_n => mm_rx_data[4].ACLR
arst_n => mm_rx_data[5].ACLR
arst_n => mm_rx_data[6].ACLR
arst_n => mm_rx_data[7].ACLR
arst_n => rdata[0]~reg0.ENA
arst_n => rdata[31]~reg0.ENA
arst_n => rdata[30]~reg0.ENA
arst_n => rdata[29]~reg0.ENA
arst_n => rdata[28]~reg0.ENA
arst_n => rdata[27]~reg0.ENA
arst_n => rdata[26]~reg0.ENA
arst_n => rdata[25]~reg0.ENA
arst_n => rdata[24]~reg0.ENA
arst_n => rdata[23]~reg0.ENA
arst_n => rdata[22]~reg0.ENA
arst_n => rdata[21]~reg0.ENA
arst_n => rdata[20]~reg0.ENA
arst_n => rdata[19]~reg0.ENA
arst_n => rdata[18]~reg0.ENA
arst_n => rdata[17]~reg0.ENA
arst_n => rdata[16]~reg0.ENA
arst_n => rdata[15]~reg0.ENA
arst_n => rdata[14]~reg0.ENA
arst_n => rdata[13]~reg0.ENA
arst_n => rdata[12]~reg0.ENA
arst_n => rdata[11]~reg0.ENA
arst_n => rdata[10]~reg0.ENA
arst_n => rdata[9]~reg0.ENA
arst_n => rdata[8]~reg0.ENA
arst_n => rdata[7]~reg0.ENA
arst_n => rdata[6]~reg0.ENA
arst_n => rdata[5]~reg0.ENA
arst_n => rdata[4]~reg0.ENA
arst_n => rdata[3]~reg0.ENA
arst_n => rdata[2]~reg0.ENA
arst_n => rdata[1]~reg0.ENA
rx => UART_rx:receiver.rx
tx << UART_tx:transmitter.tx
we => mm_tx_status.OUTPUTSELECT
we => mm_tx_status.OUTPUTSELECT
re => rdata.OUTPUTSELECT
re => rdata.OUTPUTSELECT
re => rdata.OUTPUTSELECT
re => rdata.OUTPUTSELECT
re => rdata.OUTPUTSELECT
re => rdata.OUTPUTSELECT
re => rdata.OUTPUTSELECT
re => rdata.OUTPUTSELECT
re => rdata.OUTPUTSELECT
re => rdata.OUTPUTSELECT
re => rdata.OUTPUTSELECT
re => rdata.OUTPUTSELECT
re => rdata.OUTPUTSELECT
re => rdata.OUTPUTSELECT
re => rdata.OUTPUTSELECT
re => rdata.OUTPUTSELECT
re => rdata.OUTPUTSELECT
re => rdata.OUTPUTSELECT
re => rdata.OUTPUTSELECT
re => rdata.OUTPUTSELECT
re => rdata.OUTPUTSELECT
re => rdata.OUTPUTSELECT
re => rdata.OUTPUTSELECT
re => rdata.OUTPUTSELECT
re => rdata.OUTPUTSELECT
re => rdata.OUTPUTSELECT
re => rdata.OUTPUTSELECT
re => rdata.OUTPUTSELECT
re => rdata.OUTPUTSELECT
re => rdata.OUTPUTSELECT
re => rdata.OUTPUTSELECT
re => rdata.OUTPUTSELECT
wdata[0] => ~NO_FANOUT~
wdata[1] => ~NO_FANOUT~
wdata[2] => ~NO_FANOUT~
wdata[3] => ~NO_FANOUT~
wdata[4] => ~NO_FANOUT~
wdata[5] => ~NO_FANOUT~
wdata[6] => ~NO_FANOUT~
wdata[7] => ~NO_FANOUT~
wdata[8] => ~NO_FANOUT~
wdata[9] => ~NO_FANOUT~
wdata[10] => ~NO_FANOUT~
wdata[11] => ~NO_FANOUT~
wdata[12] => ~NO_FANOUT~
wdata[13] => ~NO_FANOUT~
wdata[14] => ~NO_FANOUT~
wdata[15] => ~NO_FANOUT~
wdata[16] => ~NO_FANOUT~
wdata[17] => ~NO_FANOUT~
wdata[18] => ~NO_FANOUT~
wdata[19] => ~NO_FANOUT~
wdata[20] => ~NO_FANOUT~
wdata[21] => ~NO_FANOUT~
wdata[22] => ~NO_FANOUT~
wdata[23] => ~NO_FANOUT~
wdata[24] => ~NO_FANOUT~
wdata[25] => ~NO_FANOUT~
wdata[26] => ~NO_FANOUT~
wdata[27] => ~NO_FANOUT~
wdata[28] => ~NO_FANOUT~
wdata[29] => ~NO_FANOUT~
wdata[30] => ~NO_FANOUT~
wdata[31] => ~NO_FANOUT~
rdata[0] << rdata[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[1] << rdata[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[2] << rdata[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[3] << rdata[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[4] << rdata[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[5] << rdata[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[6] << rdata[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[7] << rdata[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[8] << rdata[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[9] << rdata[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[10] << rdata[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[11] << rdata[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[12] << rdata[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[13] << rdata[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[14] << rdata[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[15] << rdata[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[16] << rdata[16]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[17] << rdata[17]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[18] << rdata[18]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[19] << rdata[19]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[20] << rdata[20]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[21] << rdata[21]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[22] << rdata[22]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[23] << rdata[23]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[24] << rdata[24]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[25] << rdata[25]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[26] << rdata[26]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[27] << rdata[27]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[28] << rdata[28]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[29] << rdata[29]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[30] << rdata[30]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[31] << rdata[31]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[0] => Mux0.IN5
addr[0] => Mux1.IN5
addr[0] => Mux2.IN4
addr[0] => Mux3.IN4
addr[0] => Mux4.IN4
addr[0] => Mux5.IN4
addr[0] => Mux6.IN4
addr[0] => Mux7.IN4
addr[0] => Mux8.IN4
addr[0] => Mux9.IN4
addr[1] => Mux0.IN4
addr[1] => Mux1.IN4
addr[1] => Mux2.IN3
addr[1] => Mux3.IN3
addr[1] => Mux4.IN3
addr[1] => Mux5.IN3
addr[1] => Mux6.IN3
addr[1] => Mux7.IN3
addr[1] => Mux8.IN3
addr[1] => Mux9.IN3
irq << irq.DB_MAX_OUTPUT_PORT_TYPE


|uart|UART_tx:transmitter
clk => tx_fsm:statemachine.clk
clk => tx~reg0.CLK
clk => baudrategen:baudrategenerator.clk
clk => shift_tx:shiftregister.clk
areset_n => tx_fsm:statemachine.areset_n
tx_data_valid => tx_fsm:statemachine.tx_data_valid
tx_data_valid => shift_tx:shiftregister.tx_data_valid
tx_data[0] => shift_tx:shiftregister.tx_data[0]
tx_data[1] => shift_tx:shiftregister.tx_data[1]
tx_data[2] => shift_tx:shiftregister.tx_data[2]
tx_data[3] => shift_tx:shiftregister.tx_data[3]
tx_data[4] => shift_tx:shiftregister.tx_data[4]
tx_data[5] => shift_tx:shiftregister.tx_data[5]
tx_data[6] => shift_tx:shiftregister.tx_data[6]
tx_data[7] => shift_tx:shiftregister.tx_data[7]
tx <= tx~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_busy <= tx_fsm:statemachine.tx_busy


|uart|UART_tx:transmitter|tx_fsm:statemachine
clk => tx_busy~reg0.CLK
clk => tx_enable~reg0.CLK
clk => state.CLK
areset_n => state.ACLR
areset_n => tx_enable~reg0.ENA
areset_n => tx_busy~reg0.ENA
tx_data_valid => state.OUTPUTSELECT
tx_complete => state.OUTPUTSELECT
tx_enable <= tx_enable~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_busy <= tx_busy~reg0.DB_MAX_OUTPUT_PORT_TYPE


|uart|UART_tx:transmitter|baudrategen:baudrategenerator
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
tx_enable => count[0].IN1
tx_enable => baudrate.OUTPUTSELECT
tx_enable => count[0].ENA
tx_enable => count[8].ENA
tx_enable => count[7].ENA
tx_enable => count[6].ENA
tx_enable => count[5].ENA
tx_enable => count[4].ENA
tx_enable => count[3].ENA
tx_enable => count[2].ENA
tx_enable => count[1].ENA
baudrate <= baudrate.DB_MAX_OUTPUT_PORT_TYPE


|uart|UART_tx:transmitter|shift_tx:shiftregister
baudrate => baudrate_r.DATAIN
baudrate => baudrate_enable.IN1
clk => temp_reg[0].CLK
clk => temp_reg[1].CLK
clk => temp_reg[2].CLK
clk => temp_reg[3].CLK
clk => temp_reg[4].CLK
clk => temp_reg[5].CLK
clk => temp_reg[6].CLK
clk => temp_reg[7].CLK
clk => temp_reg[8].CLK
clk => temp_reg[9].CLK
clk => baudrate_r.CLK
tx_data_valid => temp_reg.OUTPUTSELECT
tx_data_valid => temp_reg.OUTPUTSELECT
tx_data_valid => temp_reg.OUTPUTSELECT
tx_data_valid => temp_reg.OUTPUTSELECT
tx_data_valid => temp_reg.OUTPUTSELECT
tx_data_valid => temp_reg.OUTPUTSELECT
tx_data_valid => temp_reg.OUTPUTSELECT
tx_data_valid => temp_reg.OUTPUTSELECT
tx_data_valid => temp_reg.OUTPUTSELECT
tx_data_valid => temp_reg.OUTPUTSELECT
tx_data[0] => temp_reg.DATAB
tx_data[1] => temp_reg.DATAB
tx_data[2] => temp_reg.DATAB
tx_data[3] => temp_reg.DATAB
tx_data[4] => temp_reg.DATAB
tx_data[5] => temp_reg.DATAB
tx_data[6] => temp_reg.DATAB
tx_data[7] => temp_reg.DATAB
tx_i <= temp_reg[0].DB_MAX_OUTPUT_PORT_TYPE


|uart|UART_rx:receiver
clk => rx_fsm:statemachinerx.clk
clk => baudrategen_rx:baudrategeneratorrx.clk
clk => bitcounter_rx:bitcounterrx.clk
clk => shift_rx:shiftregisterrx.clk
areset_n => bitcounter_rx:bitcounterrx.areset_n
rx => rx_fsm:statemachinerx.rx
rx => shift_rx:shiftregisterrx.rx
rx_data[0] <= shift_rx:shiftregisterrx.rx_data[0]
rx_data[1] <= shift_rx:shiftregisterrx.rx_data[1]
rx_data[2] <= shift_rx:shiftregisterrx.rx_data[2]
rx_data[3] <= shift_rx:shiftregisterrx.rx_data[3]
rx_data[4] <= shift_rx:shiftregisterrx.rx_data[4]
rx_data[5] <= shift_rx:shiftregisterrx.rx_data[5]
rx_data[6] <= shift_rx:shiftregisterrx.rx_data[6]
rx_data[7] <= shift_rx:shiftregisterrx.rx_data[7]
rx_err <= shift_rx:shiftregisterrx.rx_err
rx_busy <= rx_fsm:statemachinerx.rx_busy


|uart|UART_rx:receiver|rx_fsm:statemachinerx
clk => rx_enable~reg0.CLK
clk => rx_busy~reg0.CLK
clk => state.CLK
rx => state.OUTPUTSELECT
rx => state.OUTPUTSELECT
rx_complete => state.OUTPUTSELECT
rx_enable <= rx_enable~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_err <= comb.DB_MAX_OUTPUT_PORT_TYPE
rx_busy <= rx_busy~reg0.DB_MAX_OUTPUT_PORT_TYPE


|uart|UART_rx:receiver|baudrategen_rx:baudrategeneratorrx
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
rx_enable => count[0].IN1
rx_enable => baudrate.OUTPUTSELECT
rx_enable => count[0].ENA
rx_enable => count[8].ENA
rx_enable => count[7].ENA
rx_enable => count[6].ENA
rx_enable => count[5].ENA
rx_enable => count[4].ENA
rx_enable => count[3].ENA
rx_enable => count[2].ENA
rx_enable => count[1].ENA
baudrate <= baudrate.DB_MAX_OUTPUT_PORT_TYPE


|uart|UART_rx:receiver|bitcounter_rx:bitcounterrx
baudrate => ~NO_FANOUT~
clk => counter_up[0].CLK
clk => counter_up[1].CLK
clk => counter_up[2].CLK
clk => counter_up[3].CLK
clk => rx_complete~reg0.CLK
areset_n => counter_up.OUTPUTSELECT
areset_n => counter_up.OUTPUTSELECT
areset_n => counter_up.OUTPUTSELECT
areset_n => counter_up.OUTPUTSELECT
rx_complete <= rx_complete~reg0.DB_MAX_OUTPUT_PORT_TYPE


|uart|UART_rx:receiver|shift_rx:shiftregisterrx
clk => rx_err~reg0.CLK
clk => rx_data[0]~reg0.CLK
clk => rx_data[1]~reg0.CLK
clk => rx_data[2]~reg0.CLK
clk => rx_data[3]~reg0.CLK
clk => rx_data[4]~reg0.CLK
clk => rx_data[5]~reg0.CLK
clk => rx_data[6]~reg0.CLK
clk => rx_data[7]~reg0.CLK
clk => rx_buffer[0].CLK
clk => rx_buffer[1].CLK
clk => rx_buffer[2].CLK
clk => rx_buffer[3].CLK
clk => rx_buffer[4].CLK
clk => rx_buffer[5].CLK
clk => rx_buffer[6].CLK
clk => rx_buffer[7].CLK
clk => rx_buffer[8].CLK
clk => rx_buffer[9].CLK
rx => ~NO_FANOUT~
baudrate => ~NO_FANOUT~
rx_complete => rx_err~reg0.ENA
rx_complete => rx_data[0]~reg0.ENA
rx_complete => rx_data[1]~reg0.ENA
rx_complete => rx_data[2]~reg0.ENA
rx_complete => rx_data[3]~reg0.ENA
rx_complete => rx_data[4]~reg0.ENA
rx_complete => rx_data[5]~reg0.ENA
rx_complete => rx_data[6]~reg0.ENA
rx_complete => rx_data[7]~reg0.ENA
rx_data[0] <= rx_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[1] <= rx_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[2] <= rx_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[3] <= rx_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[4] <= rx_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[5] <= rx_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[6] <= rx_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[7] <= rx_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_err <= rx_err~reg0.DB_MAX_OUTPUT_PORT_TYPE


