ibrary ieee;
use ieee.std_logic_1164.all;

entity shift_tx is

  generic (
     n  : integer := 8 
    );

  port(
    baudrate:         in std_logic; 
    reset:            in std_logic; 
    tx_data_valid:    in std_logic;    --enables shifting
    tx_data:      in std_logic_vector(n-1 downto 0);    --tx data   --parallel in
    
    tx_i:         out std_logic   --serial output
    );
end shift_tx;



architecture behavioral of shift_tx is
  signal temp_reg: std_logic_vector(9 downto 0) := (Others => '0');

begin
  process (baudrate)
  begin
    if (tx_data_valid = '1') then
      temp_reg <= parallel_in; 
    end if;  
      
    if (rising_edge(baudrate)) then
      
        --shifting n number of bits
        
          tx_i <= temp_reg(0);
          temp_reg <= 1 & temp_reg(9 downto 1);  //one and register
        
      
    end if;
  end process;
end behavioral;